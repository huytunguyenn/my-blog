"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8181],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=o(a),d=l,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||r;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},539:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>o});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_label:"data types"},i="Variables, Data Types & Math Operations",p={unversionedId:"learn/language/java/data-types",id:"learn/language/java/data-types",title:"Variables, Data Types & Math Operations",description:"Variables",source:"@site/docs/learn/language/java/4-data-types.mdx",sourceDirName:"learn/language/java",slug:"/learn/language/java/data-types",permalink:"/my-blog/docs/learn/language/java/data-types",draft:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/language/java/4-data-types.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"data types"},sidebar:"docs",previous:{title:"setup",permalink:"/my-blog/docs/learn/language/java/setup"},next:{title:"statements",permalink:"/my-blog/docs/learn/language/java/statements"}},s={},o=[{value:"Variables",id:"variables",level:2},{value:"Primitive Types",id:"primitive-types",level:2},{value:"Integer",id:"integer",level:3},{value:"Floating Point",id:"floating-point",level:3},{value:"Character",id:"character",level:3},{value:"Boolean",id:"boolean",level:3},{value:"Reference Types",id:"reference-types",level:2},{value:"Special References",id:"special-references",level:3},{value:"this",id:"this",level:4},{value:"null",id:"null",level:4},{value:"Type Conversion",id:"type-conversion",level:2},{value:"Implicit Type Conversion",id:"implicit-type-conversion",level:3},{value:"Explicit Type Conversion",id:"explicit-type-conversion",level:3},{value:"Time and Date",id:"time-and-date",level:2},{value:"Instant",id:"instant",level:4},{value:"LocalTime",id:"localtime",level:4},{value:"LocalDate",id:"localdate",level:4},{value:"LocalDateTime",id:"localdatetime",level:4},{value:"ZonedDateTime",id:"zoneddatetime",level:4},{value:"DateTimeFormatter",id:"datetimeformatter",level:4}],m={toc:o};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"variables-data-types--math-operations"},"Variables, Data Types & Math Operations"),(0,l.kt)("h2",{id:"variables"},"Variables"),(0,l.kt)("p",null,"Use only letters & numbers, camelCase. First character cannot be a number."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"int total;\nint totalStudent;\nint 2much; // <- error\n")),(0,l.kt)("p",null,"Variables can be declared ",(0,l.kt)("inlineCode",{parentName:"p"},"final"),", means the value cannot be changed once set."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"final int maxStudents = 25;\n\nfinal int someVar;\nint someDummyVar = 100;\nsomeVar = someDummyVar\n")),(0,l.kt)("h2",{id:"primitive-types"},"Primitive Types"),(0,l.kt)("p",null,"Primitive types are stored by value, means each variable's values are unrelated to any others."),(0,l.kt)("p",null,"These are foundation of all other types:"),(0,l.kt)("h3",{id:"integer"},"Integer"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Bits"),(0,l.kt)("th",{parentName:"tr",align:null},"Min value"),(0,l.kt)("th",{parentName:"tr",align:null},"Max value"),(0,l.kt)("th",{parentName:"tr",align:null},"Literal form"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"byte"),(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"-128"),(0,l.kt)("td",{parentName:"tr",align:null},"127"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"short"),(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"-32768"),(0,l.kt)("td",{parentName:"tr",align:null},"32767"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"-2147483648"),(0,l.kt)("td",{parentName:"tr",align:null},"2147483647"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"long"),(0,l.kt)("td",{parentName:"tr",align:null},"64"),(0,l.kt)("td",{parentName:"tr",align:null},"-9223372036854775808"),(0,l.kt)("td",{parentName:"tr",align:null},"9223372036854775807"),(0,l.kt)("td",{parentName:"tr",align:null},"0L")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"byte a = 25;\nshort b = 5280;\nint c = 92960000;\nlong d = 5879000000000L;\n")),(0,l.kt)("h3",{id:"floating-point"},"Floating Point"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Bits"),(0,l.kt)("th",{parentName:"tr",align:null},"Smallest positive value"),(0,l.kt)("th",{parentName:"tr",align:null},"Largest positive value"),(0,l.kt)("th",{parentName:"tr",align:null},"Literal form"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"1.4 x 10^-45"),(0,l.kt)("td",{parentName:"tr",align:null},"3.4 x 10^38"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"double"),(0,l.kt)("td",{parentName:"tr",align:null},"64"),(0,l.kt)("td",{parentName:"tr",align:null},"4.9 x 10^-324"),(0,l.kt)("td",{parentName:"tr",align:null},"1.7 x 10^308"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0 or 0.0d")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"float a = 42.195f;\nfloat b = -273.15f;\ndouble c = 0.0000000001d;\n")),(0,l.kt)("h3",{id:"character"},"Character"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"char a = 'B';\nchar b = '\\u00DA';  // \xda (for Unicode code points, use \\u + 4-digit hex value)\n")),(0,l.kt)("h3",{id:"boolean"},"Boolean"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"boolean a = true;\n")),(0,l.kt)("h2",{id:"reference-types"},"Reference Types"),(0,l.kt)("p",null,"Refe"),(0,l.kt)("h3",{id:"special-references"},"Special References"),(0,l.kt)("h4",{id:"this"},"this"),(0,l.kt)("p",null,"Implicit reference to current object."),(0,l.kt)("h4",{id:"null"},"null"),(0,l.kt)("p",null,"Represents an uncreated object. Sometimes, we just declare it and create after."),(0,l.kt)("h2",{id:"type-conversion"},"Type Conversion"),(0,l.kt)("h3",{id:"implicit-type-conversion"},"Implicit Type Conversion"),(0,l.kt)("p",null,"Conversion automatically performed by the compiler."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"int a = 50;\nlong b = a;\n")),(0,l.kt)("p",null,"Implicit widening conversions are automatically done:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Mixed integer sizes: use largest integer"),(0,l.kt)("li",{parentName:"ul"},"Mixed floating point sizes: use double"),(0,l.kt)("li",{parentName:"ul"},"Mixed integer and floating point: use largest floating point")),(0,l.kt)("p",null,"Compiler cannot automatically do narrowing conversions ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mo",{parentName:"mrow"},"\u2192")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\rightarrow")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,l.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," explicit by developers."),(0,l.kt)("h3",{id:"explicit-type-conversion"},"Explicit Type Conversion"),(0,l.kt)("p",null,"Conversion performed explicitly in code with ",(0,l.kt)("em",{parentName:"p"},"cast operator"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"long b = 50;\nint a = (int) b;\n")),(0,l.kt)("p",null,"Consider with explicit conversions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Narrowing: significant bits may be discarded"),(0,l.kt)("li",{parentName:"ul"},"Floating point ",(0,l.kt)("span",{parentName:"li",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mo",{parentName:"mrow"},"\u2192")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\rightarrow")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,l.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," integer: fractional portion may be discarded"),(0,l.kt)("li",{parentName:"ul"},"Integer ",(0,l.kt)("span",{parentName:"li",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mo",{parentName:"mrow"},"\u2192")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\rightarrow")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,l.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," floating point: precision may be lost (10000 may be 9999,9999)")),(0,l.kt)("h2",{id:"time-and-date"},"Time and Date"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Time of events: primarily interested in sequencing and timestamp."),(0,l.kt)("li",{parentName:"ul"},"Human-friendly time: date and/or time of day."),(0,l.kt)("li",{parentName:"ul"},"Global human-friendly time: date and time of day, understands time zone.")),(0,l.kt)("h4",{id:"instant"},"Instant"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Instant nowInstant = Instant.now();\nInstant otherInstant\n\notherInstant.compareTo(nowInstant) // > < = 0\n")),(0,l.kt)("h4",{id:"localtime"},"LocalTime"),(0,l.kt)("p",null,"09:15:10.000000"),(0,l.kt)("h4",{id:"localdate"},"LocalDate"),(0,l.kt)("p",null,"2023-12-3"),(0,l.kt)("h4",{id:"localdatetime"},"LocalDateTime"),(0,l.kt)("h4",{id:"zoneddatetime"},"ZonedDateTime"),(0,l.kt)("h4",{id:"datetimeformatter"},"DateTimeFormatter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'LocalDate today = LocalDate.now();  // 2023-03-30\n\nDateTimeFormatter usDateFormat = DateTimeFormatter.ofPattern("MM-dd-yyyy");\nString output = today.format(usDateFormat); // 03-30-2023\n')))}u.isMDXComponent=!0}}]);
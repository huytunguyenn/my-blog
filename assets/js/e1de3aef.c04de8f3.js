"use strict";(self.webpackChunktu_website=self.webpackChunktu_website||[]).push([[4679],{3133:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=n(5893),a=n(1151);const i={sidebar_label:"classes & objects",toc_max_heading_level:4},l="Classes and Objects",r={id:"learn/language/java/classes-and-objects",title:"Classes and Objects",description:"Java is an object-oriented language.",source:"@site/docs/learn/language/java/9-classes-and-objects.mdx",sourceDirName:"learn/language/java",slug:"/learn/language/java/classes-and-objects",permalink:"/my-blog/docs/learn/language/java/classes-and-objects",draft:!1,unlisted:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/language/java/9-classes-and-objects.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_label:"classes & objects",toc_max_heading_level:4},sidebar:"docs",previous:{title:"packages",permalink:"/my-blog/docs/learn/language/java/packages"},next:{title:"oop",permalink:"/my-blog/docs/learn/language/java/oop"}},c={},d=[{value:"Objects",id:"objects",level:2},{value:"Memory",id:"memory",level:3},{value:"Object Class Methods",id:"object-class-methods",level:3},{value:"Classes",id:"classes",level:2},{value:"Declare",id:"declare",level:3},{value:"Usage",id:"usage",level:3},{value:"Access Modifier",id:"access-modifier",level:2},{value:"Non-access Modifier",id:"non-access-modifier",level:2},{value:"Static Members",id:"static-members",level:3},{value:"Static Fields",id:"static-fields",level:4},{value:"Static Methods",id:"static-methods",level:4},{value:"Static Import Statement",id:"static-import-statement",level:4},{value:"Static Initialization Blocks",id:"static-initialization-blocks",level:4},{value:"Nested Classes",id:"nested-classes",level:2}];function h(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",math:"math",mermaid:"mermaid",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"classes-and-objects",children:"Classes and Objects"}),"\n",(0,t.jsx)(s.p,{children:"Java is an object-oriented language."}),"\n",(0,t.jsx)(s.h2,{id:"objects",children:"Objects"}),"\n",(0,t.jsxs)(s.p,{children:["In Java, ",(0,t.jsx)(s.strong,{children:"everything is an object"}),". It is the root of Java class hierarchy."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.em,{children:["For example, look at the below image, it is hierarchy of classes to deal with input, output stream, it has the root of ",(0,t.jsx)(s.code,{children:"Object"})," class."]})}),"\n",(0,t.jsx)(s.mermaid,{value:'graph LR\n    A(["Object"])\n    B(["InputStream"])\n    B1(["FileInputStream"])\n    B2(["ByteArrayInputStream"])\n    B3(["FilterInputStream"])\n    B4(["ObjectInputStream"])\n    B31(["BufferedInputStream"])\n    B32(["DataInputStream"])\n    C(["OutputStream"])\n    C1(["FileOutputStream"])\n    C2(["ByteArrayOutputStream"])\n    C3(["FilterOutputStream"])\n    C4(["ObjectOutputStream"])\n    C31(["BufferedOutputStream"])\n    C32(["DataOutputStream"])\n\n    A --\x3e B & C\n    B --\x3e B1 & B2 & B3 & B4\n    B3 --\x3e B31 & B32\n    C --\x3e C1 & C2 & C3 & C4\n    C3 --\x3e C31 & C32'}),"\n",(0,t.jsx)(s.p,{children:"Object has some characteristics:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["an ",(0,t.jsx)(s.code,{children:"Object"})," reference can reference an instance of any class"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"every class"})," has characteristics of ",(0,t.jsx)(s.code,{children:"Object"})]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'Object[] stuff = new Object[3];\n\nstuff[0] = new Student(123);\nstuff[1] = new MathEquation();\nstuff[2] = "a string";\n\nObject o = "string";\no = new House(1);\n\nvoid doWork(Object o) { }\n'})}),"\n",(0,t.jsx)(s.h3,{id:"memory",children:"Memory"}),"\n",(0,t.jsxs)(s.p,{children:["When create object, Java allocates it in ",(0,t.jsx)(s.strong,{children:"heap"})," memory. But not only that, Java returns a reference to the object (object's address). And usually, we assign that to a variable."]}),"\n",(0,t.jsxs)(s.p,{children:["So unlike ",(0,t.jsx)(s.a,{href:"/my-blog/docs/learn/language/java/data-types#primitive-types",children:"Primitives"})," (contain a value), Object variables contain a reference to the object."]}),"\n",(0,t.jsx)(s.p,{children:"We never interact with the object directly but through reference."}),"\n",(0,t.jsx)(s.h3,{id:"object-class-methods",children:"Object Class Methods"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Method"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"clone"})}),(0,t.jsx)(s.td,{children:"Create a new object instance that duplicates the current instance"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"hashCode"})}),(0,t.jsx)(s.td,{children:"Get a hash code for current instance"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"getClass"})}),(0,t.jsx)(s.td,{children:"Return type information for the current instance"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"finialize"})}),(0,t.jsx)(s.td,{children:"Handle special resource cleanup scenarios"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"toString"})}),(0,t.jsx)(s.td,{children:"Return a string value representing the current instance"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"equals"})}),(0,t.jsx)(s.td,{children:"Compare another object to the current instance for equality"})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["One application of this is to build ",(0,t.jsx)(s.code,{children:"equals"})," method:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"public class Person {\n  private int age;\n\n  public boolean equals(Object o) {\n    Person person = (Person) o;\n    return age == person.age;\n  }\n}\n"})}),"\n",(0,t.jsxs)(s.p,{children:["But if we use ",(0,t.jsx)(s.code,{children:"equals"})," with classes that aren't ",(0,t.jsx)(s.code,{children:"Person"}),", it can crash the program. To prevent that, use ",(0,t.jsx)(s.code,{children:"instanceof"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"public class Person {\n  private int age;\n  public boolean equals(Object o) {\n    // -highlight-start\n    if (!(o instanceof Person))\n      return false;\n    // -highlight-end\n    Person person = (Person) o;\n    return age == person.age;\n  }\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,t.jsx)(s.p,{children:"Class is a template for creating objects. While object is an instance of a class."}),"\n",(0,t.jsx)(s.p,{children:"Classes are reference types, means class variable simply hold a reference."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"Student tu = new Student();  // age: 0\nStudent huy = new Student();  // age: 0\ntu.age += 10;\n\n// this is reference type (because both tu and huy are not primitive types)\n// both variables can reference to the same instance\nhuy = tu;\n\nhuy.age // 10\nhuy.age += 2\ntu.age // 12\n"})}),"\n",(0,t.jsx)(s.h3,{id:"declare",children:"Declare"}),"\n",(0,t.jsx)(s.p,{children:"Class has fields & methods."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"// Name.java  //  same name of class\nclass Name {\n  int attribute;\n  Name() {  // constructor\n    atrribute = 0;\n  }\n  void Method() {}\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Final fields need to be initialized when create objects."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"// this will get error from compiler\nclass Person {\n  // -error\n  final int age;\n  Person() { }  // to fix, we need to init it in constructor\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(s.p,{children:"Declare a variable of type of the class doesn't create the object, it just holds the reference."}),"\n",(0,t.jsxs)(s.p,{children:["To create object, use ",(0,t.jsx)(s.code,{children:"new"})," keyword."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"Student huytu = new Student();\n\n// it's actually doing 2 step\nStudent huytu;  // create variable hold the reference\nhuytu = new Student(); // create new object instance & reference\n"})}),"\n",(0,t.jsx)(s.h2,{id:"access-modifier",children:"Access Modifier"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Access modifier"})," is used to achieve ",(0,t.jsx)(s.strong,{children:"encapsulation"}),". It controls class/member visibility."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Modifier"}),(0,t.jsx)(s.th,{children:"Visibility"}),(0,t.jsx)(s.th,{children:"Usable on Classes"}),(0,t.jsx)(s.th,{children:"Usable on Members"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"No access modifier"}),(0,t.jsxs)(s.td,{children:["Only within its own package (aslo called ",(0,t.jsx)(s.strong,{children:"package private"}),")"]}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"\u2705"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"public"})}),(0,t.jsx)(s.td,{children:"Everywhere"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"\u2705"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"private"})}),(0,t.jsx)(s.td,{children:"Only within the declaring class"}),(0,t.jsx)(s.td,{children:"\u274c*"}),(0,t.jsx)(s.td,{children:"\u274c"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"protected"})}),(0,t.jsx)(s.td,{children:"Only within its package and all subclasses"}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["**In general, classes cannot be ",(0,t.jsx)(s.code,{children:"private"}),". There is an exception, that is ",(0,t.jsx)(s.a,{href:"#nested-classes",children:"nested classes"}),"*."]}),"\n",(0,t.jsx)(s.h2,{id:"non-access-modifier",children:"Non-access Modifier"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"static"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"final"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"abstract"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"strictfp"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"synchronized"})}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"static-members",children:"Static Members"}),"\n",(0,t.jsxs)(s.p,{children:["This is the least objec-oriented feature of Java. Static members are shared class-wide.\n",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mo,{children:"\u2192"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," not associated with individual instance."]}),"\n",(0,t.jsxs)(s.p,{children:["Using ",(0,t.jsx)(s.code,{children:"static"})," keyword ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mo,{children:"\u2192"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," accessible using class name."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsxs)(s.em,{children:["This is why the class has default static ",(0,t.jsx)(s.code,{children:"main"}),", we can call them directly without creating object of that class."]})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'public class Program {\n    public static void main(String[] args) {\n      System.out.println("Hello, world!");\n    }\n}\n// highlight-start\nJVM call: Program.main(new String[] {});\n// highlight-end\n'})}),"\n",(0,t.jsx)(s.h4,{id:"static-fields",children:"Static Fields"}),"\n",(0,t.jsx)(s.p,{children:"A value not associated to any instance. All instances access the same value."}),"\n",(0,t.jsxs)(s.p,{children:["Global variables are easier to cause bugs ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mo,{children:"\u2192"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," better prefer global constant (",(0,t.jsx)(s.code,{children:"public static final"})," > ",(0,t.jsx)(s.code,{children:"public static"}),")"]}),"\n",(0,t.jsx)(s.h4,{id:"static-methods",children:"Static Methods"}),"\n",(0,t.jsx)(s.p,{children:"Performs an action not tied to a specific instance. Has access to static members only."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"public class Flight {\n  private int passengers, seats = 150;\n  private static int allPassengers;\n\n  public static int getAllPassengers() {\n    return allPassengers;\n  }\n  public static void resetAllPassengers() {\n    allPassengers = 0;\n  }\n  public void add1Passenger() {\n    passsenger += 1;\n    allPassengers += 1;\n  }\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Usage:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"Flight.resetAllPassengers();  // allPassengers: 0\n\nFlight a = new Flight();\na.add1Passenger();  // allPassengers: 1\nFlight b = new Flight();\nb.add1Passenger();  // allPassengers: 2\n\nFlight.getAllPassengers();  // 2\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Limitation"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["You cannot call static method in non-static method ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mo,{children:"\u2192"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," you have to create object first"]}),"\n",(0,t.jsx)(s.li,{children:"You cannot override static method."}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"static-import-statement",children:"Static Import Statement"}),"\n",(0,t.jsx)(s.p,{children:"Import statement allows a type name to be used without being package-qualified."}),"\n",(0,t.jsx)(s.p,{children:"Static import statement is used with static methods and allows method name to be used without being class-qualified."}),"\n",(0,t.jsx)(s.p,{children:"The code above will become like this:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"import static java.lang.Math.PI;\nimport static com.example.flightapp.Flight.resetAllPassenger;\nimport static com.example.flightapp.Flight.getAllPassengers;\nimport static com.example.flightapp.Flight.*;  // import all\n\n// -error\ndouble a = Math.PI;\n// -highlight\ndouble a = PI;\n// -error\nFlight.resetAllPassengers();\n// -highlight\nresetAllPassengers();\n// -error\nFlight.getAllPassengers();\n// -highlight\ngetAllPassengers();\n"})}),"\n",(0,t.jsx)(s.h4,{id:"static-initialization-blocks",children:"Static Initialization Blocks"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.em,{children:["Read more about ",(0,t.jsx)(s.a,{href:"/my-blog/docs/learn/language/java/functions-methods#initialization-blocks",children:"Initialization Blocks"})]}),"."]}),"\n",(0,t.jsx)(s.p,{children:"It performs one-time type initialization:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"execute before type's first use"}),"\n",(0,t.jsx)(s.li,{children:"has access to static members only"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:"public class Flight {\n  private static int allPassengers, maxPassengers;\n  // -highlight-start\n  // called once the first time you use the class\n  static {\n    allPassengers = loadFromFile();\n  }\n  // -highlight-end\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"nested-classes",children:"Nested Classes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'class Outer {\n   int num;\n   // inner class\n   private class Inner {\n      public void print() {\n         System.out.println("This is an inner class");\n      }\n   }\n   // Accessing he inner class from the method within\n   void display_Inner() {\n      Inner inner = new Inner();\n      inner.print();\n   }\n}\n\npublic class Main {\n   public static void main(String args[]) {\n      Outer outer = new Outer();  // outer first\n      Outer.Inner inner = outer.new Inner();  // then inner\n      outer.display_Inner();\n      inner.print();\n   }\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:"A static inner class is a nested class which is a static member of the outer class. It can be accessed without instantiating the outer class, using other static members."})]})}function o(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>r,a:()=>l});var t=n(7294);const a={},i=t.createContext(a);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);
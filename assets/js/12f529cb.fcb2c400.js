"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4454],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return t?a.createElement(g,l(l({ref:n},c),{},{components:t})):a.createElement(g,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7048:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_label:"quizzes",description:"quizzes"},l="Q & A",o={unversionedId:"learn/language/java/quizes",id:"learn/language/java/quizes",title:"Q & A",description:"quizzes",source:"@site/docs/learn/language/java/98-quizes.mdx",sourceDirName:"learn/language/java",slug:"/learn/language/java/quizes",permalink:"/my-blog/docs/learn/language/java/quizes",draft:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/language/java/98-quizes.mdx",tags:[],version:"current",sidebarPosition:98,frontMatter:{sidebar_label:"quizzes",description:"quizzes"},sidebar:"docs",previous:{title:"libs",permalink:"/my-blog/docs/learn/language/java/libraries"},next:{title:"golang",permalink:"/my-blog/docs/category/golang"}},s={},u=[],c={toc:u};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"q--a"},"Q & A"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"equals()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"=="))),(0,r.kt)("p",null,"Equality can be reference based or valued based:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"==")," can be used for primitive types, because ",(0,r.kt)("strong",{parentName:"li"},"equality and reference checking work identically for primitives"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"equals")," for object types (",(0,r.kt)("inlineCode",{parentName:"li"},"==")," performs reference check only)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class Animal {\n    private String name;\n\n    public Animal (String name) { this.name = name; }\n    public String getName() { return name; }\n    public void setName(String name) { this.name = name; }\n    public static void main(String args[]) {\n        List<Animal> animals = Arrays.asList(\n                new Animal("cat"),\n                new Animal("dog"),\n                new Animal("chicken"));\n\n        // these will print out false, false, false if you not implement `equals` and `hashCode`\n        System.out.println(animals.contains(new Animal("cat")));\n        System.out.println(animals.contains(new Animal("dog")));\n        System.out.println(animals.contains(new Animal("foo")));\n    }\n}\n')),(0,r.kt)("p",null,"Add these 2, then it will print out ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    @Override\n    public boolean equals(Object object) {\n        if(this == object)\n            return true;\n        if(object == null || getClass() != object.getClass())\n            return false;\n        Animal animal = (Animal) object;\n        return Objects.equals(name, animal.name);\n    }\n    @Override\n    public int hashCode() {\n        return Objects.hash(name);\n    }\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Method overloading & method overriding\n",(0,r.kt)("a",{parentName:"li",href:"https://www.geeksforgeeks.org/difference-between-method-overloading-and-method-overriding-in-java/"},"https://www.geeksforgeeks.org/difference-between-method-overloading-and-method-overriding-in-java/"))))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktu_website=self.webpackChunktu_website||[]).push([[2219],{1268:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"concurrency-series-1-measurement","metadata":{"permalink":"/my-blog/vi/more-of-technical-blogs/concurrency-series-1-measurement","editUrl":"https://github.com/huytunguyenn/my-blog/tree/main/blog/career/2024/5-15-ccrc-measurement.mdx","source":"@site/blog/career/2024/5-15-ccrc-measurement.mdx","title":"the first 2 measurement units","description":"Ch\u1eafc h\u1eb3n ai c\u0169ng mu\u1ed1n (kh\xf4ng mu\u1ed1n th\xec \u0111\u1ebfn l\xfac c\u0169ng ph\u1ea3i mu\u1ed1n) c\xe1i app m\xecnh code ch\u1ea1y nhanh nh\u1ea5t,","date":"2024-05-15T00:00:00.000Z","formattedDate":"15 th\xe1ng 5, 2024","tags":[],"readingTime":2.865,"hasTruncateMarker":false,"authors":[{"name":"Huy-Tu Nguyen","title":"Software Engineer","url":"https://github.com/huytunguyenn","imageURL":"https://avatars.githubusercontent.com/u/49774218?s=400&u=138919d59c0418791e7151634a2c1e662846b074&v=4","key":"huytu"}],"frontMatter":{"slug":"concurrency-series-1-measurement","title":"the first 2 measurement units","authors":["huytu"],"tags":[],"hide_table_of_contents":false},"unlisted":false,"nextItem":{"title":"blob-la-gi","permalink":"/my-blog/vi/more-of-technical-blogs/2024/1/4/career/blob-la-gi"}},"content":"Ch\u1eafc h\u1eb3n ai c\u0169ng mu\u1ed1n (kh\xf4ng mu\u1ed1n th\xec \u0111\u1ebfn l\xfac c\u0169ng ph\u1ea3i mu\u1ed1n) c\xe1i app m\xecnh code ch\u1ea1y nhanh nh\u1ea5t,\\nresponsive nh\u1ea5t n\xean kh\xf4ng l\u1ea1 g\xec v\u1edbi c\xe1c th\xf4ng s\u1ed1 \u0111o \u0111\u1ea1c performance c\u1ee7a h\u1ec7 th\u1ed1ng\\n\u0111\u1ec3 bi\u1ebft n\xf3 nhanh hay ch\u1eadm. V\xe0i c\xe1i ti\xeau bi\u1ec3u l\xe0 latency & throughput.\\n\\n### \\\\[Concurrency series\\\\] #1 \u0110o \u0111\u1ea1c t\u1ed1c \u0111\u1ed9\\n\\n\\n**Latency (\u0111\u1ed9 tr\u1ec5)** l\xe0 th\u1eddi gian t\u1eeb khi g\xf3i tin \u0111\u01b0\u1ee3c g\u1eedi \u0111i cho \u0111\u1ebfn khi g\xf3i tin\\n\u0111\u01b0\u1ee3c nh\u1eadn, hay l\xe0 th\u1eddi gian t\u1eeb khi b\u1eaft \u0111\u1ea7u t\u1edbi khi ho\xe0n th\xe0nh task, hay l\xe0.\\nLatency cao ngh\u0129a l\xe0 \u0111\u1ed9 tr\u1ec5 cao, aka th\u1eddi gian ho\xe0n th\xe0nh l\u1edbn-ch\u1eadm.\\n\\n**Throughput (th\xf4ng l\u01b0\u1ee3ng)** l\xe0 s\u1ed1 byte g\u1eedi/nh\u1eadn trong 1 gi\xe2y c\u1ee7a m\u1ea1ng, l\xe0 s\u1ed1 l\u01b0\u1ee3ng\\ntask m\xe0 system c\xf3 th\u1ec3 handle trong 1 kho\u1ea3ng th\u1eddi gian. N\xf3 th\u1ec3 hi\u1ec7n cho \u201cn\u0103ng su\u1ea5t\u201d.\\n\\n> *M\u1ed9t v\xed d\u1ee5 \u0111\u01a1n gi\u1ea3n l\xe0 xe m\xe1y & xe bus, xe m\xe1y c\xf3 th\u1ec3 nhanh g\u1ea5p \u0111\xf4i xe bus nh\u01b0ng\\nxe bus l\u1ea1i ch\u1edf \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng x25 l\u1ea7n xe m\xe1y. Xe bus c\xf3 throughput l\u1edbn h\u01a1n xe m\xe1y.*\\n\\n**\\n\\n***V\u1eady l\xe0 h\u1ec7 th\u1ed1ng throughput cao th\xec latency th\u1ea5p?*** C\u0169ng kh\xf4ng h\u1eb3n nh\u01b0 v\u1eady:\\n\\n> *Xe m\xe1y ch\u1edf \u0111c 1 ng\u01b0\u1eddi/h, xe bus th\xec ch\u1edf 50 ng\u01b0\u1eddi/2h (l\xe0 25 ng\u01b0\u1eddi/h). Trong tr\u01b0\u1eddng\\nh\u1ee3p n\xe0y, xe bus c\xf3 throughput cao, nh\u01b0ng latency n\xf3 c\u0169ng cao h\u01a1n xe m\xe1y. In the end,\\nn\xf3 v\u1eabn ph\u1ea3i t\u1ed1n 2h \u0111\u1ec3 ho\xe0n th\xe0nh nhi\u1ec7m v\u1ee5*\\n\\n\u2192 T\u01b0\u01a1ng t\u1ef1 trong h\u1ec7 th\u1ed1ng m\xe1y t\xednh, **kh\xf4ng ph\u1ea3i throughput cao l\xe0 \u0111\u1ed3ng ngh\u0129a v\u1edbi latency th\u1ea5p.**\\n\\nC\xf3 2 \u0111i\u1ec1u c\u1ea7n l\u01b0u \xfd r\u1eb1ng:\\n\\n- C\u1ea3i thi\u1ec7n y\u1ebfu t\u1ed1 n\xe0y c\xf3 th\u1ec3 l\xe0m t\u1ec7 \u0111i y\u1ebfu t\u1ed1 c\xf2n l\u1ea1i.\\n- C\xe1c kh\xe1i ni\u1ec7m tr\xe1i ngh\u0129a nhau kh\xf4ng \u0111\u1ed3ng th\u1eddi tri\u1ec7t ti\xeau nhau m\xe0 c\xf3 th\u1ec3 t\u1ed3n t\u1ea1i c\xf9ng nhau (c\xe1i n\xe0y n\xf3i sau hehe).\\n\\nN\xf3i m\u1ed9t c\xe1ch technical h\u01a1n 1 long-running task c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c chia nh\u1ecf th\xe0nh nhi\u1ec1u\\ntask c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi *song song*, gi\xfap gi\u1ea3m th\u1eddi gian th\u1ef1c thi \u2192 gi\u1ea3m latency.\\nNhi\u1ec1u task \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n *\u0111\u1ed3ng th\u1eddi* c\u0169ng l\xe0 gi\xfap t\u0103ng throughput.\\n\\n`x` c\xf2n gi\xfap **che gi\u1ea5u latency.**\\n\\n> *M\u1ed9t v\xed d\u1ee5 \u0111\u1eddi th\u1ef1c l\xe0 khi ch\u1edd xe bus, thay v\xec ch\u1ec9 ng\u1ed3i ch\u1edd, ch\xfang ta c\xf3 th\u1ec3 l\xe0m\\nnh\u1eefng task kh\xe1c nh\u01b0 \u0111\u1ecdc s\xe1ch, check mail, tin nh\u1eafn, g\u1ecdi \u0111i\u1ec7n, \u0103n s\xe1ng, etc.*\\n\\n\u0110\xe2y l\xe0 nh\u1eefng h\xe0nh \u0111\u1ed9ng v\xf4 th\u1ee9c m\xe0 ta l\xe0m th\u01b0\u1eddng ng\xe0y. T\u1ea1i sao ch\xfang ta l\xe0m? \u2192 B\u1edfi v\xec ch\xfang ta \u201cth\u1ea5y\u201d n\xf3 optimize ho\u1ea1t \u0111\u1ed9ng c\u1ee7a m\xecnh.\\n\\n*T\u1ea1i sao n\xf3 optimize? Vi\u1ec7c ch\xfang check mail trong l\xfac ch\u1edd xe bus kh\xf4ng gi\xfap xe bus \u0111i nhanh h\u01a1n?*\\n\\n\u2192 Well th\u1ef1c t\u1ebf b\u1edfi v\xec ch\xfang ta \u0111\xe3 che gi\u1ea5u \u0111i \u0111\u1ed9 tr\u1ec5 c\u1ee7a xe bus, i.e. l\xe0m task kh\xe1c trong\\nth\u1eddi gian \u0111\u1ee3i task c\xf3 latency cao. \u0110\xe2y c\u0169ng l\xe0 m\u1ed9t v\xed d\u1ee5 cho th\u1ea5y che gi\u1ea5u latency\\nl\xe0 m\u1ed9t trong nh\u1eefng key cho 1 responsive system (v\xe0 \u0111\xe2y l\xe0 \u0111\xe1p \xe1n \u0111\u1ea7u ti\xean cho b\xe0i to\xe1n li\xean quan t\u1edbi vi\u1ec7c waiting).\\n\\n** *Chatchit*\\n\\n***Q:*** Wait, what is `x`?\\n\\n***A:*** Based on the title and the bold words, you\u2019ve already known. It is concurrency.\\n\\n***Q:*** V\u1eady n\xf3i 1 h\u1ed3i th\xec li\xean quan g\xec t\u1edbi measurement?\\n\\n***A:*** V\xec n\xf3 l\xe0 \u0111\u1ed9ng l\u1ef1c. Concurrency kh\xf4ng m\u1edbi nh\u01b0ng n\xf3 l\xe0 skill c\u1ea7n thi\u1ebft v\u1edbi modern systems ng\xe0y nay.\\n\\n***Q:*** What is concurrency?\\n\\n***A:*** Dunno yet.\\n\\n---\\n\\n**ResRef**: Kirill Bobrov, Manning Publications - Grokking Concurrency"},{"id":"/2024/1/4/career/blob-la-gi","metadata":{"permalink":"/my-blog/vi/more-of-technical-blogs/2024/1/4/career/blob-la-gi","editUrl":"https://github.com/huytunguyenn/my-blog/tree/main/blog/career/2024/1-4-blob-la-gi.mdx","source":"@site/blog/career/2024/1-4-blob-la-gi.mdx","title":"blob-la-gi","description":"","date":"2024-01-04T00:00:00.000Z","formattedDate":"4 th\xe1ng 1, 2024","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"the first 2 measurement units","permalink":"/my-blog/vi/more-of-technical-blogs/concurrency-series-1-measurement"},"nextItem":{"title":"Duck typing","permalink":"/my-blog/vi/more-of-technical-blogs/duck-typing"}},"content":""},{"id":"duck-typing","metadata":{"permalink":"/my-blog/vi/more-of-technical-blogs/duck-typing","editUrl":"https://github.com/huytunguyenn/my-blog/tree/main/blog/career/2023/12-29-duck-typing.mdx","source":"@site/blog/career/2023/12-29-duck-typing.mdx","title":"Duck typing","description":"ABC//medium.com/always-be-coding/abc-always-be-coding-d5f8051afce2","date":"2023-12-29T00:00:00.000Z","formattedDate":"29 th\xe1ng 12, 2023","tags":[{"label":"career","permalink":"/my-blog/vi/more-of-technical-blogs/tags/career"}],"readingTime":1.81,"hasTruncateMarker":false,"authors":[{"name":"Huy-Tu Nguyen","title":"Software Engineer","url":"https://github.com/huytunguyenn","imageURL":"https://avatars.githubusercontent.com/u/49774218?s=400&u=138919d59c0418791e7151634a2c1e662846b074&v=4","key":"huytu"}],"frontMatter":{"slug":"duck-typing","title":"Duck typing","authors":["huytu"],"tags":["career"],"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"blob-la-gi","permalink":"/my-blog/vi/more-of-technical-blogs/2024/1/4/career/blob-la-gi"},"nextItem":{"title":"T\u1ea3n m\xe0n v\u1ec1 scripts (2023)","permalink":"/my-blog/vi/more-of-technical-blogs/my-experience-about-writing-scripts"}},"content":"ABC: https://medium.com/always-be-coding/abc-always-be-coding-d5f8051afce2\\n\\nBroken windows: https://en.wikipedia.org/wiki/Broken_windows_theory\\n\\n\\n## T\xe1ch h\xe0m nh\u01b0 th\u1ebf n\xe0o\\n\\n```bash\\n    src = if imageDownloadUrl != null then builtins.fetchurl {\\n    } else fetchEcr {\\n    };\\n```\\n\\n\\nhttps://en.wikipedia.org/wiki/Duck_typing\\n\\nN\u1ebfu c\xf3 th\u1ec3 cho r\u1eb1ng b\u1ea5t c\u1ee9 th\u1ee9 g\xec bi\u1ebft b\u01a1i \u0111\u1ec1u l\xe0 v\u1ecbt v\xec v\u1ecbt c\xf3 th\u1ec3 b\u01a1i th\xec c\xe1 voi c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c coi l\xe0 v\u1ecbt; tuy nhi\xean, n\u1ebfu ng\u01b0\u1eddi ta c\u0169ng cho r\u1eb1ng con v\u1ecbt ph\u1ea3i c\xf3 kh\u1ea3 n\u0103ng bay th\xec con c\xe1 voi s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c coi l\xe0 con v\u1ecbt.\\n\\nSo it seems weird that the function has to be executed either with args A, B or with arg C, D, but no overlap. It doesn\'t even attempt to catch odd case if all args are specified.\\n\\nThis should be separated back into two separate unrelated functions for clarity, and shouldn\'t be `doEverything(args, for, all, possible, cases)`\\n\\n\\nI don\'t know if I\'d agree with that. It\'s fine to have two functions returning the same \\"type\\" (i.e. in nix\'s case, similar to JavaScripts, using duck typing). But having function distinctly doing different things just so that it returns same return type is weird. If one function fails to return, for example, imageTag and that key is needed for evaluation, nix evaluation will fail with error message. And if it\'s not needed, no harm if function doesn\'t return it.\\n\\nI.e. there are many functions in nix (that can be used) for fetching git source code: fetchUrl, fetchGit, fetchGitHub, fetchGitLab, fetchTarball, fetchBitbucket, fetchgitLocal , fetchgitPrivate, and possibly even more. There even other functions for svn, hg, and other source-related fetches. Each, in the end, returns one same thing, a git repo. But you\'ll notice that there is not a function fetchRepo(name, revision, url, git, github, gitlab, tarball, bitbucket, local, private) which would reuse first two args, and then require exclusive 3rd arg (or some combination of exclusive arg sets, such as sometimes asking for authentication or w/e else). Because such a function would be unmanageable and confusing. So I think it\'s best to separate the two, and, in addition, make it clearer which one is fetching from where and requires what data explicitly (e.g. Ecr fetch always would require aws creds, not optionally)"},{"id":"my-experience-about-writing-scripts","metadata":{"permalink":"/my-blog/vi/more-of-technical-blogs/my-experience-about-writing-scripts","editUrl":"https://github.com/huytunguyenn/my-blog/tree/main/blog/career/2023/12-29-tan-man-ve-scripts.mdx","source":"@site/blog/career/2023/12-29-tan-man-ve-scripts.mdx","title":"T\u1ea3n m\xe0n v\u1ec1 scripts (2023)","description":"T\xe2m s\u1ef1 nh\u1ea3m (skip for now):","date":"2023-12-29T00:00:00.000Z","formattedDate":"29 th\xe1ng 12, 2023","tags":[],"readingTime":1.255,"hasTruncateMarker":false,"authors":[{"name":"Huy-Tu Nguyen","title":"Software Engineer","url":"https://github.com/huytunguyenn","imageURL":"https://avatars.githubusercontent.com/u/49774218?s=400&u=138919d59c0418791e7151634a2c1e662846b074&v=4","key":"huytu"}],"frontMatter":{"slug":"my-experience-about-writing-scripts","title":"T\u1ea3n m\xe0n v\u1ec1 scripts (2023)","authors":["huytu"],"tags":[],"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Duck typing","permalink":"/my-blog/vi/more-of-technical-blogs/duck-typing"},"nextItem":{"title":"Dump l\xe0 g\xec?","permalink":"/my-blog/vi/more-of-technical-blogs/what-is-dump"}},"content":"*T\xe2m s\u1ef1 nh\u1ea3m (skip for now):*\\nN\u0103m m\u1edbi s\u1eafp h\u1ebft, h\xf4m nay l\xe0 ng\xe0y l\xe0m vi\u1ec7c cu\u1ed1i c\xf9ng c\u1ee7a n\u0103m - friday 29/12\\n(th\u1eadt ra h\xf4m nay booked off r\u1ed3i :v). N\xean c\u0169ng mu\u1ed1n vi\u1ebft m\u1ed9t c\xe1i g\xec \u0111\xf3. Cho n\xean\\nh\xf4m nay s\u1ebd vi\u1ebft v\u1ec1 m\u1ed9t th\u1ee9 li\xean quan t\u1edbi c\xf4ng vi\u1ec7c c\u1ee7a m\xecnh trong n\u1eeda cu\u1ed1i n\u0103m\\nv\u1eeba qua, \u0111\xf3 ch\xednh l\xe0 l\xe0m vi\u1ec7c v\u1edbi scripts.\\n\\n# L\xe0m vi\u1ec7c v\u1edbi scripts\\n\\n## Kinh nghi\u1ec7m v\u1edbi\\n\\nCh\xfang ta lu\xf4n c\xf3 folder d\u1ef1 ph\xf2ng `/tmp` \u1edf \u0111\xe2u \u0111\xf3.\\n\\nKhi l\xe0m m\u1ed9t l\u1ec7nh g\xec \u0111\xf3 n\xean check n\u1ebfu l\u1ec7nh \u0111\xf3 c\xf3 th\u1ec3 fail v\xe0 g\xe2y crash. M\u1ed9t s\u1ed1 v\xed d\u1ee5\\n\\n1.\\n\\n```bash\\n# Copy file \u1edf SOURCE -> TARGET\\nscp $SOURCE/my_awesome_file $TARGET:/still_my_awesome_file\\n```\\n\\nN\xean:\\n\\n```bash\\nscp ... || (echo \\"failed yada yada\\"; exit 1)\\n```\\n\\nNh\u1eefng l\u1ec7nh `cd` v\u1ec1 technically v\u1eabn c\xf3 th\u1ec3 failed v\u1edbi nh\u1eefng unexpected path.\\n\\nUse \\"|| true\\" to avoid interruption on stopping failure\\n\\n```bash\\ndocker-compose -f ${hostConfig.dockerComposeYmlPath} down -v || true\\n\\n```\\nThis stop on errors but hide all errors.\\n\\n2. Error\\n\\n\\n```bash\\nmkdir -p ${hostConfig.dockerRootDataDir} || true\\necho \\"Success!\\"\\n```\\n$\\\\leftarrow$`|| true` here seems pointless, as it\'ll continue anyway. Also confusing in that it\'ll always write Success! even if mkdir fails -> It was meant to be `|| exit 1`\\n\\n```bash\\nif [ ! -f \\"$file_path\\" ]; then\\n  echo \\"Expecting the file at path $file_path but it\'s unavailable. Stop now\\"\\n```\\nshould be going to stderr via >&2?\\n\\n\\n```bash\\n# For debug when needed\\nset -x\\n```"},{"id":"what-is-dump","metadata":{"permalink":"/my-blog/vi/more-of-technical-blogs/what-is-dump","editUrl":"https://github.com/huytunguyenn/my-blog/tree/main/blog/career/2023/12-22-dump-la-gi.mdx","source":"@site/blog/career/2023/12-22-dump-la-gi.mdx","title":"Dump l\xe0 g\xec?","description":"Dump l\xe0 g\xec?","date":"2023-12-22T00:00:00.000Z","formattedDate":"22 th\xe1ng 12, 2023","tags":[{"label":"career","permalink":"/my-blog/vi/more-of-technical-blogs/tags/career"}],"readingTime":0.02,"hasTruncateMarker":false,"authors":[{"name":"Huy-Tu Nguyen","title":"Software Engineer","url":"https://github.com/huytunguyenn","imageURL":"https://avatars.githubusercontent.com/u/49774218?s=400&u=138919d59c0418791e7151634a2c1e662846b074&v=4","key":"huytu"}],"frontMatter":{"slug":"what-is-dump","title":"Dump l\xe0 g\xec?","authors":["huytu"],"tags":["career"],"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"T\u1ea3n m\xe0n v\u1ec1 scripts (2023)","permalink":"/my-blog/vi/more-of-technical-blogs/my-experience-about-writing-scripts"}},"content":"## Dump l\xe0 g\xec?"}]}')}}]);
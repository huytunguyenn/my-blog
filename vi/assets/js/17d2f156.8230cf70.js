"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2506],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=l,h=m["".concat(s,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9186:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const r={sidebar_position:3},i="Advanced",o={unversionedId:"learn/utils/bash/advanced_commands",id:"learn/utils/bash/advanced_commands",title:"Advanced",description:"Some advanced things",source:"@site/docs/learn/utils/bash/advanced_commands.mdx",sourceDirName:"learn/utils/bash",slug:"/learn/utils/bash/advanced_commands",permalink:"/my-blog/vi/docs/learn/utils/bash/advanced_commands",draft:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/utils/bash/advanced_commands.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Basic first",permalink:"/my-blog/vi/docs/learn/utils/bash/basic_commands"},next:{title:"Scripting",permalink:"/my-blog/vi/docs/learn/utils/bash/scripting"}},s={},p=[{value:"Pipes &amp; direction",id:"pipes--direction",level:2},{value:"Wildcards",id:"wildcards",level:2},{value:"Superuser do",id:"superuser-do",level:2},{value:"Customization",id:"customization",level:2},{value:"Variables",id:"variables",level:3},{value:"Aliases",id:"aliases",level:3},{value:"Community",id:"community",level:3}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"advanced"},"Advanced"),(0,l.kt)("p",null,"Some advanced things"),(0,l.kt)("h2",{id:"pipes--direction"},"Pipes & direction"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"|")," is called pipe symbol."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ls | less"),": take output from ",(0,l.kt)("inlineCode",{parentName:"p"},"ls")," and send it to input of ",(0,l.kt)("inlineCode",{parentName:"p"},"less"),". So that you can easily browse through file list."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"grep string file"),": search for ",(0,l.kt)("em",{parentName:"p"},"string")," in ",(0,l.kt)("em",{parentName:"p"},"file")," and print only those lines."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Some examples")),(0,l.kt)("p",null,"Let say I have a csv file that includes details of films that nominated Oscars:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"I want extract all the films that are in 1978 in order.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'First I find all the lines that has "1978": ',(0,l.kt)("inlineCode",{parentName:"li"},"grep 1978 oscars.tsv")),(0,l.kt)("li",{parentName:"ul"},"Then I continue to sort: ",(0,l.kt)("inlineCode",{parentName:"li"},"grep 1978 oscars.tsv | sort")),(0,l.kt)("li",{parentName:"ul"},"Then I want to save it to another file: ",(0,l.kt)("inlineCode",{parentName:"li"},"grap 1978 oscars.tsv | sort > 1978films.txt"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"I want to know how many films received 4 Oscars. Suppose 3rd column is number of Oscar film received.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Cut the 3rd column of every line and print it: ",(0,l.kt)("inlineCode",{parentName:"li"},"cut -f 3 oscars.tsv")),(0,l.kt)("li",{parentName:"ul"},"Find 4: ",(0,l.kt)("inlineCode",{parentName:"li"},"cut -f 3 oscars.tsv | grep 4")),(0,l.kt)("li",{parentName:"ul"},"Count how many of them: ",(0,l.kt)("inlineCode",{parentName:"li"},"cut -f 3 oscars.tsv | grep 4 | wc -l")," (wc means word count, -l is for line)")),(0,l.kt)("h2",{id:"wildcards"},"Wildcards"),(0,l.kt)("p",null,"Wildcards is the star or asterisk that bash will replace with the name of all files in the current directory."),(0,l.kt)("p",null,"For example:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ls a*"),': list all files start with "a".'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ls *a"),': list all files end with "a".'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ls *ab*"),': list all files contain "ab".'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grep ab *"),': search "ab" in all files.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"echo *"),': (echo is just simply echo what you type), bash will replace "*" with all the files in the directory.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mv *txt textFolder"),": move all txt file to ",(0,l.kt)("em",{parentName:"li"},"textFolder"))),(0,l.kt)("h2",{id:"superuser-do"},"Superuser do"),(0,l.kt)("p",null,"Some command that not allowed to run. To run it add ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo")," at the beginning."),(0,l.kt)("h2",{id:"customization"},"Customization"),(0,l.kt)("p",null,"There are many files is used for customization. All these files should be placed at home directory."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Bash"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},".profile read on login -> should use for config variable"),(0,l.kt)("li",{parentName:"ul"},".bashrc read for interactive shells -> should use for running commands, aliases")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Zsh"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},".zshenv read always"),(0,l.kt)("li",{parentName:"ul"},".zshrc read fir interactive shells")),(0,l.kt)("h3",{id:"variables"},"Variables"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"export SOMEVAR=some_value")),(0,l.kt)("p",null,"Usually to not set this everytime you start shell, you should put it in a ",(0,l.kt)("inlineCode",{parentName:"p"},".zshenv")," file. For ",(0,l.kt)("strong",{parentName:"p"},"bash"),", it is ",(0,l.kt)("inlineCode",{parentName:"p"},".profile"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ nano .zshenv\n$ export EDITOR=nano\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"PATH")," is a path variable indicate where to look for the commands. If it doesn't exist, shell will tell the command cannot be found."),(0,l.kt)("p",null,"To see the value, use ",(0,l.kt)("inlineCode",{parentName:"p"},"echo")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"$"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ echo $PATH\n/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:\n")),(0,l.kt)("p",null,"This means that when you use command like ",(0,l.kt)("inlineCode",{parentName:"p"},"grep")," for e.g., the shell will go to ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:")," to find that command to execute."),(0,l.kt)("p",null,"Let's say we have ",(0,l.kt)("em",{parentName:"p"},"helloworld")," program in ",(0,l.kt)("em",{parentName:"p"},"bin")," folder. Using like this won't work:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ helloworld\nzsh: command not found: helloworld\n\n$ bin/helloworld # path from the home directory to the executable file\n# executes the file\nHello, World!\n")),(0,l.kt)("p",null,"To make it easier, you can add ",(0,l.kt)("em",{parentName:"p"},"bin")," to the PATH variable."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ export PATH=$PATH:~/bin # extend the $PATH variable with bin, colon as separator\n\n# now you can use helloworld from everywhere\n$ helloworld\nHello, World!\n")),(0,l.kt)("h3",{id:"aliases"},"Aliases"),(0,l.kt)("p",null,"In macOS, the ",(0,l.kt)("inlineCode",{parentName:"p"},"ls")," list does not show any colors. To do it, you have to use ",(0,l.kt)("inlineCode",{parentName:"p"},"ls -G"),"."),(0,l.kt)("p",null,"Or you can simply put alias:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ alias ls="ls -G"\n$ ls\n# show files in colors\n')),(0,l.kt)("h3",{id:"community"},"Community"),(0,l.kt)("p",null,"Check out the documentations of bash and zsh."),(0,l.kt)("p",null,"Check out ",(0,l.kt)("a",{parentName:"p",href:"https://ohmyz.sh"},"ohmyz.sh"),"."))}d.isMDXComponent=!0}}]);
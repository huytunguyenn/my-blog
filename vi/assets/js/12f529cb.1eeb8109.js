"use strict";(self.webpackChunktu_website=self.webpackChunktu_website||[]).push([[4454],{9975:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=a(5893),t=a(1151);const s={sidebar_label:"quizzes",description:"quizzes"},r="Q & A",l={id:"learn/language/java/quizes",title:"Q & A",description:"quizzes",source:"@site/docs/learn/language/java/98-quizes.mdx",sourceDirName:"learn/language/java",slug:"/learn/language/java/quizes",permalink:"/my-blog/vi/docs/learn/language/java/quizes",draft:!1,unlisted:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/language/java/98-quizes.mdx",tags:[],version:"current",sidebarPosition:98,frontMatter:{sidebar_label:"quizzes",description:"quizzes"},sidebar:"docs",previous:{title:"libs",permalink:"/my-blog/vi/docs/learn/language/java/libraries"},next:{title:"golang",permalink:"/my-blog/vi/docs/category/golang"}},o={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"q--a",children:"Q & A"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"equals()"})," and ",(0,i.jsx)(n.code,{children:"=="})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Equality can be reference based or valued based:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"=="})," can be used for primitive types, because ",(0,i.jsx)(n.strong,{children:"equality and reference checking work identically for primitives"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"equals"})," for object types (",(0,i.jsx)(n.code,{children:"=="})," performs reference check only)"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Animal {\n    private String name;\n\n    public Animal (String name) { this.name = name; }\n    public String getName() { return name; }\n    public void setName(String name) { this.name = name; }\n    public static void main(String args[]) {\n        List<Animal> animals = Arrays.asList(\n                new Animal("cat"),\n                new Animal("dog"),\n                new Animal("chicken"));\n\n        // these will print out false, false, false if you not implement `equals` and `hashCode`\n        System.out.println(animals.contains(new Animal("cat")));\n        System.out.println(animals.contains(new Animal("dog")));\n        System.out.println(animals.contains(new Animal("foo")));\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Add these 2, then it will print out ",(0,i.jsx)(n.code,{children:"true"}),", ",(0,i.jsx)(n.code,{children:"true"}),", ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"    @Override\n    public boolean equals(Object object) {\n        if(this == object)\n            return true;\n        if(object == null || getClass() != object.getClass())\n            return false;\n        Animal animal = (Animal) object;\n        return Objects.equals(name, animal.name);\n    }\n    @Override\n    public int hashCode() {\n        return Objects.hash(name);\n    }\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Method overloading & method overriding\n",(0,i.jsx)(n.a,{href:"https://www.geeksforgeeks.org/difference-between-method-overloading-and-method-overriding-in-java/",children:"https://www.geeksforgeeks.org/difference-between-method-overloading-and-method-overriding-in-java/"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>r});var i=a(7294);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);
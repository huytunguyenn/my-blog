"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4356],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(r),g=o,m=u["".concat(c,".").concat(g)]||u[g]||p[g]||i;return r?n.createElement(m,a(a({ref:t},d),{},{components:r})):n.createElement(m,a({ref:t},d))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2424:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_label:"intro",description:"introduction about software design"},a="Introduction",s={unversionedId:"learn/architecture-design/design/intro",id:"learn/architecture-design/design/intro",title:"Introduction",description:"introduction about software design",source:"@site/docs/learn/architecture-design/design/1-intro.mdx",sourceDirName:"learn/architecture-design/design",slug:"/learn/architecture-design/design/intro",permalink:"/my-blog/vi/docs/learn/architecture-design/design/intro",draft:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/architecture-design/design/1-intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"intro",description:"introduction about software design"},sidebar:"docs",previous:{title:"software design",permalink:"/my-blog/vi/docs/category/software-design"},next:{title:"framework / library",permalink:"/my-blog/vi/docs/category/framework--library"}},c={},l=[{value:"Is this is algorithms?",id:"is-this-is-algorithms",level:2},{value:"Then, what is this?",id:"then-what-is-this",level:2}],d={toc:l};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"is-this-is-algorithms"},"Is this is algorithms?"),(0,o.kt)("p",null,"No, design patterns and algorithms are not the same category of concepts."),(0,o.kt)("p",null,"Algorithms refer to a set of well-defined instructions or procedures that can be followed to perform a specific task or solve a problem. Algorithms are typically expressed in pseudocode or code and can be implemented in a programming language. They can be categorized based on their purpose, such as searching, sorting, optimization, or machine learning."),(0,o.kt)("p",null,"On the other hand, design patterns are higher-level concepts that provide solutions to commonly occurring problems in software design. A design pattern is a general reusable solution to a commonly occurring problem in software design. Design patterns are not specific to any programming language, but rather describe a general approach to solving a particular problem."),(0,o.kt)("p",null,"In summary, algorithms are step-by-step procedures for solving a specific problem, while design patterns are higher-level solutions to common software design problems."),(0,o.kt)("h2",{id:"then-what-is-this"},"Then, what is this?"),(0,o.kt)("p",null,"Design patterns are a concept in the domain of software architecture design. They provide solutions to common design problems that arise when building software systems, such as how to structure code for maintainability, how to manage dependencies between components, how to handle errors, and many more."),(0,o.kt)("p",null,"Design patterns are not tied to any specific programming language or technology and can be applied to a wide range of software systems. They are intended to help software developers create systems that are flexible, extensible, and easy to maintain. Therefore, they are an important tool in the domain of software architecture and design."))}p.isMDXComponent=!0}}]);
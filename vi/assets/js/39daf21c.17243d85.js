"use strict";(self.webpackChunktu_website=self.webpackChunktu_website||[]).push([[5798],{9540:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=r(5893),i=r(1151);const a={sidebar_label:"trie",description:"Trie"},s=void 0,o={id:"learn/data-structure/trie",title:"trie",description:"Trie",source:"@site/docs/learn/data-structure/7-trie.mdx",sourceDirName:"learn/data-structure",slug:"/learn/data-structure/trie",permalink:"/my-blog/vi/docs/learn/data-structure/trie",draft:!1,unlisted:!1,editUrl:"https://github.com/huytunguyenn/my-blog/tree/main/docs/learn/data-structure/7-trie.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"trie",description:"Trie"},sidebar:"docs",previous:{title:"binary search tree / hash map",permalink:"/my-blog/vi/docs/learn/data-structure/binary-search-tree-set-map"},next:{title:"disjoint set union",permalink:"/my-blog/vi/docs/learn/data-structure/disjoint-set-union"}},u={},c=[];function d(t){return(0,n.jsx)(n.Fragment,{})}function l(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d()}},1151:(t,e,r)=>{r.d(e,{Z:()=>o,a:()=>s});var n=r(7294);const i={},a=n.createContext(i);function s(t){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),n.createElement(a.Provider,{value:e},t.children)}}}]);